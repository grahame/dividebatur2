#[macro_use]
extern crate serde_derive;
extern crate phf;

mod aec;

#[derive(Clone)]
pub enum PreferenceValue {
    Z0 = 0,
    Z1 = 1,
    Z2 = 2,
    Z3 = 3,
    Z4 = 4,
    Z5 = 5,
    Z6 = 6,
    Z7 = 7,
    Z8 = 8,
    Z9 = 9,
    Z10 = 10,
    Z11 = 11,
    Z12 = 12,
    Z13 = 13,
    Z14 = 14,
    Z15 = 15,
    Z16 = 16,
    Z17 = 17,
    Z18 = 18,
    Z19 = 19,
    Z20 = 20,
    Z21 = 21,
    Z22 = 22,
    Z23 = 23,
    Z24 = 24,
    Z25 = 25,
    Z26 = 26,
    Z27 = 27,
    Z28 = 28,
    Z29 = 29,
    Z30 = 30,
    Z31 = 31,
    Z32 = 32,
    Z33 = 33,
    Z34 = 34,
    Z35 = 35,
    Z36 = 36,
    Z37 = 37,
    Z38 = 38,
    Z39 = 39,
    Z40 = 40,
    Z41 = 41,
    Z42 = 42,
    Z43 = 43,
    Z44 = 44,
    Z45 = 45,
    Z46 = 46,
    Z47 = 47,
    Z48 = 48,
    Z49 = 49,
    Z50 = 50,
    Z51 = 51,
    Z52 = 52,
    Z53 = 53,
    Z54 = 54,
    Z55 = 55,
    Z56 = 56,
    Z57 = 57,
    Z58 = 58,
    Z59 = 59,
    Z60 = 60,
    Z61 = 61,
    Z62 = 62,
    Z63 = 63,
    Z64 = 64,
    Z65 = 65,
    Z66 = 66,
    Z67 = 67,
    Z68 = 68,
    Z69 = 69,
    Z70 = 70,
    Z71 = 71,
    Z72 = 72,
    Z73 = 73,
    Z74 = 74,
    Z75 = 75,
    Z76 = 76,
    Z77 = 77,
    Z78 = 78,
    Z79 = 79,
    Z80 = 80,
    Z81 = 81,
    Z82 = 82,
    Z83 = 83,
    Z84 = 84,
    Z85 = 85,
    Z86 = 86,
    Z87 = 87,
    Z88 = 88,
    Z89 = 89,
    Z90 = 90,
    Z91 = 91,
    Z92 = 92,
    Z93 = 93,
    Z94 = 94,
    Z95 = 95,
    Z96 = 96,
    Z97 = 97,
    Z98 = 98,
    Z99 = 99,
    Z100 = 100,
    Z101 = 101,
    Z102 = 102,
    Z103 = 103,
    Z104 = 104,
    Z105 = 105,
    Z106 = 106,
    Z107 = 107,
    Z108 = 108,
    Z109 = 109,
    Z110 = 110,
    Z111 = 111,
    Z112 = 112,
    Z113 = 113,
    Z114 = 114,
    Z115 = 115,
    Z116 = 116,
    Z117 = 117,
    Z118 = 118,
    Z119 = 119,
    Z120 = 120,
    Z121 = 121,
    Z122 = 122,
    Z123 = 123,
    Z124 = 124,
    Z125 = 125,
    Z126 = 126,
    Z127 = 127,
    Z128 = 128,
    Z129 = 129,
    Z130 = 130,
    Z131 = 131,
    Z132 = 132,
    Z133 = 133,
    Z134 = 134,
    Z135 = 135,
    Z136 = 136,
    Z137 = 137,
    Z138 = 138,
    Z139 = 139,
    Z140 = 140,
    Z141 = 141,
    Z142 = 142,
    Z143 = 143,
    Z144 = 144,
    Z145 = 145,
    Z146 = 146,
    Z147 = 147,
    Z148 = 148,
    Z149 = 149,
    Z150 = 150,
    Z151 = 151,
    Z152 = 152,
    Z153 = 153,
    Z154 = 154,
    Z155 = 155,
    Z156 = 156,
    Z157 = 157,
    Z158 = 158,
    Z159 = 159,
    Z160 = 160,
    Z161 = 161,
    Z162 = 162,
    Z163 = 163,
    Z164 = 164,
    Z165 = 165,
    Z166 = 166,
    Z167 = 167,
    Z168 = 168,
    Z169 = 169,
    Z170 = 170,
    Z171 = 171,
    Z172 = 172,
    Z173 = 173,
    Z174 = 174,
    Z175 = 175,
    Z176 = 176,
    Z177 = 177,
    Z178 = 178,
    Z179 = 179,
    Z180 = 180,
    Z181 = 181,
    Z182 = 182,
    Z183 = 183,
    Z184 = 184,
    Z185 = 185,
    Z186 = 186,
    Z187 = 187,
    Z188 = 188,
    Z189 = 189,
    Z190 = 190,
    Z191 = 191,
    Z192 = 192,
    Z193 = 193,
    Z194 = 194,
    Z195 = 195,
    Z196 = 196,
    Z197 = 197,
    Z198 = 198,
    Z199 = 199,
    Z200 = 200,
    Z201 = 201,
    Z202 = 202,
    Z203 = 203,
    Z204 = 204,
    Z205 = 205,
    Z206 = 206,
    Z207 = 207,
    Z208 = 208,
    Z209 = 209,
    Z210 = 210,
    Z211 = 211,
    Z212 = 212,
    Z213 = 213,
    Z214 = 214,
    Z215 = 215,
    Z216 = 216,
    Z217 = 217,
    Z218 = 218,
    Z219 = 219,
    Z220 = 220,
    Z221 = 221,
    Z222 = 222,
    Z223 = 223,
    Z224 = 224,
    Z225 = 225,
    Z226 = 226,
    Z227 = 227,
    Z228 = 228,
    Z229 = 229,
    Z230 = 230,
    Z231 = 231,
    Z232 = 232,
    Z233 = 233,
    Z234 = 234,
    Z235 = 235,
    Z236 = 236,
    Z237 = 237,
    Z238 = 238,
    Z239 = 239,
    Z240 = 240,
    Z241 = 241,
    Z242 = 242,
    Z243 = 243,
    Z244 = 244,
    Z245 = 245,
    Z246 = 246,
    Z247 = 247,
    Z248 = 248,
    Z249 = 249,
    Z250 = 250,
    Z251 = 251,
    Z252 = 252,
    Z253 = 253,
    Z254 = 254,
    Z255 = 255
}

include!(concat!(env!("OUT_DIR"), "/codegen.rs"));

pub fn parse_preference_value(s: &str) -> u8 {
    PREFERENCE_VALUES.get(s).cloned().unwrap() as u8
}

fn main() {
    let candidates = match aec::data::candidates::load("aec_data/fed2016/common/aec-senate-candidateinformation-20499.csv", "NT") {
        Ok(rows) => rows,
        Err(error) => {
            panic!("Couldn't read candidates file: {:?}", error);
        }
    };

    println!("{} candidates", candidates.len());

    let prefs = match aec::data::formalpreferences::load("aec_data/fed2016/nsw/data/aec-senate-formalpreferences-20499-NSW.csv") {
        Ok(rows) => rows,
        Err(error) => {
            panic!("Couldn't read formal preferences file: {:?}", error);
        }
    };

    println!("{} formal preferences", prefs.len());
}
